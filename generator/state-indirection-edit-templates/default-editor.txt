\\import ${this.imports}

\\define headline() <$wikify name="targetTiddler" text=<<internalTarget>>><$list filter="[<targetTiddler>is[tiddler]]">${this.modifyHeadline}</$list><$list filter="[<targetTiddler>!is[tiddler]]">${this.createHeadline}</$list></$wikify>

\\define internalStateBase() <$wikify name="stateTiddler" text=<<stateBase>>><$list filter="[<stateTiddler>length[]!match[0]]"><<stateTiddler>></$list><$list filter="[<stateTiddler>length[]match[0]]"><<qualify "$:/state/rimir/dasma/creation">></$list></$wikify>
\\define internalTarget() <$wikify name="stateTiddler" text=<<internalStateBase>>><$wikify name="targetTiddler" text=<<target>>><$list filter="[<targetTiddler>length[]!match[0]]"><<targetTiddler>></$list><$list filter="[<targetTiddler>length[]match[0]]">${this.newTitleTemplate}</$list></$wikify></$wikify>

\\define addStaticFields() <$wikify name="targetTiddler" text=<<internalTarget>>><$action-setfield $tiddler="$(targetTiddler)$" ${this.staticFieldAssignments}/></$wikify>

\\define validEditorComponentsList() <$list filter=<<fields>>><$macrocall $name="validateField" fieldName=<<currentTiddler>>/> </$list>

\\define validateField(fieldName) <<valid-$fieldName$>>

\\define validEditor() <$wikify name="valids" text=<<validEditorComponentsList>>><$list filter="[enlist<valids>match[no]else[yes]]"><<currentTiddler>></$list></$wikify>

\\define fieldNames() <$list filter=<<is-create-filter>>>${this.creationFieldNames}</$list><$list filter=<<is-modify-filter>>>${this.modificationFieldNames}</$list>

<$wikify name="targetTiddler" text=<<internalTarget>>>
<$wikify name="stateTiddler" text=<<internalStateBase>>>
<$wikify name="fields" text=<<fieldNames>>>
<$wikify name="draftFlow" text="yes">
<<editor>>
</$wikify>
</$wikify>
</$wikify>
</$wikify>