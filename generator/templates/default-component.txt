\\define stateTiddler-${this.fieldName}() ${this.stateTiddlerName}

\\define stateFieldName-${this.fieldName}() tmp_${this.fieldName}
\\define targetFieldName-${this.fieldName}() ${this.fieldName}
\\define name-${this.fieldName}() ${this.caption}
\\define mandatory-${this.fieldName}() ${this.mandatory}

\\define valid-${this.fieldName}() <$list filter="[<mandatory-${this.fieldName}>!match[yes]]">yes</$list><$list filter="[<mandatory-${this.fieldName}>match[yes]]"><$wikify name="currentValue" text=<<current-value-${this.fieldName}>>><$list filter="[<currentValue>length[]!match[0]]">yes</$list><$list filter="[<currentValue>length[]match[0]]">no</$list></$wikify></$list>

\\define previous-value-${this.fieldName}() <$vars rimir:dasma:tiddler="$(targetTiddler)$" rimir:dasma:field="$(targetFieldName-${this.fieldName})$"><$transclude tiddler="${this.previousValueReader.component}"/></$vars>

\\define current-value-${this.fieldName}() <$vars rimir:dasma:tiddler="$(stateTiddler-${this.fieldName})$" rimir:dasma:field="$(stateFieldName-${this.fieldName})$"><$transclude tiddler="${this.currentValueReader.component}"/></$vars>

\\define display-narrow-${this.fieldName}() ${this.narrowing.display}
\\define narrowStateTiddler-${this.fieldName}() $(stateTiddler-${this.fieldName})$/narrowTiddlers/$(targetFieldName-${this.fieldName})$
\\define narrow-${this.fieldName}()
<$vars rimir:dasma:internalStateTiddler="$(narrowStateTiddler-${this.fieldName})$">
<$transclude tiddler="${this.narrowing.component}"/>
</$vars>
\\end
\\define narrow-filter-${this.fieldName}() [search:caption:literal{$(narrowStateTiddler-${this.fieldName})$!!caption}]

\\define display-group-${this.fieldName}() ${this.grouping.display}
\\define groupStateTiddler-${this.fieldName}() $(stateTiddler-${this.fieldName})$/groupTiddlers/$(targetFieldName-${this.fieldName})$
\\define group-${this.fieldName}()
<$vars rimir:dasma:internalStateTiddler="$(groupStateTiddler-${this.fieldName})$">
<$transclude tiddler="${this.grouping.component}"/>
</$vars>
\\end

\\define display-validate-${this.fieldName}() ${this.validation.display}
\\define validateStateTiddler-${this.fieldName}() $(stateTiddler-${this.fieldName})$/validateTiddlers/$(targetFieldName-${this.fieldName})$
\\define validate-${this.fieldName}()
<$vars rimir:dasma:internalStateTiddler="$(validateStateTiddler-${this.fieldName})$" rimir:dasma:previousTiddler="$(targetTiddler)$" rimir:dasma:previousField="$(targetFieldName-${this.fieldName})$" rimir:dasma:currentTiddler="$(stateTiddler-${this.fieldName})$" rimir:dasma:currentField="$(stateFieldName-${this.fieldName})$">
<$transclude tiddler="${this.validation.component}"/>
</$vars>
\\end

\\define display-info-${this.fieldName}() ${this.information.display}
\\define infoStateTiddler-${this.fieldName}() $(stateTiddler-${this.fieldName})$/infoTiddlers/$(targetFieldName-${this.fieldName})$
\\define info-${this.fieldName}()
<$vars rimir:dasma:internalStateTiddler="$(infoStateTiddler-${this.fieldName})$" rimir:dasma:previousTiddler="$(targetTiddler)$" rimir:dasma:previousField="$(targetFieldName-${this.fieldName})$" rimir:dasma:currentTiddler="$(stateTiddler-${this.fieldName})$" rimir:dasma:currentField="$(stateFieldName-${this.fieldName})$">
<$transclude tiddler="${this.information.component}"/>
</$vars>
\\end

\\define display-previous-${this.fieldName}() ${this.previousValueRenderer.display}
\\define previous-${this.fieldName}()
<$wikify name="theValue" text="""$(previous-value-${this.fieldName})$""">
<$vars rimir:dasma:value=<<theValue>>>
<$transclude tiddler="${this.previousValueRenderer.component}"/>
</$vars>
</$wikify>
\\end

\\define display-current-${this.fieldName}() ${this.currentValueRenderer.display}
\\define current-${this.fieldName}()
<$wikify name="theValue" text="""$(current-value-${this.fieldName})$""">
<$vars rimir:dasma:value=<<theValue>>>
<$transclude tiddler="${this.currentValueRenderer.component}"/>
</$vars>
</$wikify>
\\end

\\define readonly-${this.fieldName}() ${this.readonlyRenderer.display}
\\define edit-${this.fieldName}()
<$list filter="[<targetTiddler>!is[tiddler]][<readonly-${this.fieldName}>match[no]]+[first[]]">
<$vars rimir:dasma:tiddler="$(stateTiddler-${this.fieldName})$" rimir:dasma:field="$(stateFieldName-${this.fieldName})$" rimir:dasma:filter="${this.edit.filter}" ${this.edit.customFields}>
<$transclude tiddler="${this.edit.component}"/>
</$vars>
</$list>
<$list filter="[<targetTiddler>is[tiddler]]">
<$list filter="[<readonly-${this.fieldName}>match[yes]]">
<$wikify name="theValue" text="""$(previous-value-${this.fieldName})$""">
<$vars rimir:dasma:value=<<theValue>>>
<$transclude tiddler="${this.readonlyRenderer.component}"/>
</$vars>
</$wikify>
</$list>
</$list>
\\end

\\define save-${this.fieldName}()
<$wikify name="currentValue" text=<<current-value-${this.fieldName}>>>
<$list filter="[<currentValue>length[]!match[0]]">
<$vars rimir:dasma:sourceTiddler="$(stateTiddler-${this.fieldName})$" rimir:dasma:sourceField="$(stateFieldName-${this.fieldName})$" rimir:dasma:targetTiddler="$(targetTiddler)$" rimir:dasma:targetField="$(targetFieldName-${this.fieldName})$" ${this.save.customFields}>
<$transclude tiddler="${this.save.component}"/>
</$vars>
</$list>
<$list filter="[<currentValue>length[]match[0]]">
<$action-deletefield $tiddler=<<targetTiddler>> $field=<<targetFieldName-${this.fieldName}>>/>
</$list>
</$wikify>
\\end

\\define load-${this.fieldName}()
<$vars rimir:dasma:sourceTiddler="$(targetTiddler)$" rimir:dasma:sourceField="$(targetFieldName-${this.fieldName})$" rimir:dasma:targetTiddler="$(stateTiddler-${this.fieldName})$" rimir:dasma:targetField="$(stateFieldName-${this.fieldName})$" ${this.load.customFields}>
<$transclude tiddler="${this.load.component}"/>
</$vars>
\\end