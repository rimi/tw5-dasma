caption: Prototype: Component: proto.refs (MultiSelect)
created: 20201218091527988
modified: 20201218091528247
title: $:/plugins/rimir/dasma/prototypes/state-indirection-editor/proto.refs
tocp.dasma-plugin-parent.ref: #:/p/dasma/#:/prototyping/fields
type: text/vnd.tiddlywiki

\define stateTiddler-proto.refs() $(stateTiddler)$

\define stateFieldPrefix() <$list filter="[<wfDraftFlow>!match[yes]]">tmp_</$list>

\define stateFieldName-proto.refs() $(stateFieldPrefix)$proto.refs
\define targetFieldName-proto.refs() proto.refs
\define name-proto.refs() Component: proto.refs (MultiSelect)
\define mandatory-proto.refs() no
\define transient-proto.refs() no

\define valid-proto.refs() <$list filter="[<mandatory-proto.refs>!match[yes]]">yes</$list><$list filter="[<mandatory-proto.refs>match[yes]]"><$wikify name="currentValue" text=<<current-value-proto.refs>>><$list filter="[<currentValue>length[]!match[0]]">yes</$list><$list filter="[<currentValue>length[]match[0]]">no</$list></$wikify></$list><$wikify name="theEnableValidation" text="<<display-validate-proto.refs>>"><$list filter="[<theEnableValidation>match[yes]]"> <<validate-proto.refs>></$list></$wikify>

\define previous-value-proto.refs() <$vars rimir:dasma:tiddler="$(targetTiddler)$" rimir:dasma:field="$(targetFieldName-proto.refs)$"><$transclude tiddler="$:/plugins/rimir/dasma/templates/value-readers/read-field"/></$vars>

\define current-value-proto.refs() <$wikify name="wfStateFieldName" text=<<stateFieldName-proto.refs>>><$vars rimir:dasma:tiddler=<<stateTiddler-proto.refs>> rimir:dasma:field=<<wfStateFieldName>>><$transclude tiddler="$:/plugins/rimir/dasma/templates/value-readers/read-field"/></$vars></$wikify>

\define display-narrow-proto.refs() yes
\define narrowStateTiddler-proto.refs() $(stateTiddler-proto.refs)$/narrowTiddlers/$(targetFieldName-proto.refs)$
\define narrow-proto.refs()
<$vars rimir:dasma:internalStateTiddler="$(narrowStateTiddler-proto.refs)$">
<$transclude tiddler="$:/plugins/rimir/dasma/templates/narrowers/caption-only"/>
</$vars>
\end
\define narrow-filter-proto.refs() [search:caption:literal{$(narrowStateTiddler-proto.refs)$!!caption}]

\define display-group-proto.refs() no
\define groupStateTiddler-proto.refs() $(stateTiddler-proto.refs)$/groupTiddlers/$(targetFieldName-proto.refs)$
\define group-proto.refs()
<$vars rimir:dasma:internalStateTiddler="$(groupStateTiddler-proto.refs)$">
<$transclude tiddler="TBD"/>
</$vars>
\end

\define display-validate-proto.refs() no
\define validateStateTiddler-proto.refs() $(stateTiddler-proto.refs)$/validateTiddlers/$(targetFieldName-proto.refs)$
\define validate-proto.refs()
<$wikify name="wfStateFieldName" text=<<stateFieldName-proto.refs>>>
<$wikify name="theValue" text="""$(current-value-proto.refs)$""">
<$vars rimir:dasma:value=<<theValue>> rimir:dasma:internalStateTiddler="$(validateStateTiddler-proto.refs)$" rimir:dasma:previousTiddler="$(targetTiddler)$" rimir:dasma:previousField="$(targetFieldName-proto.refs)$" rimir:dasma:currentTiddler="$(stateTiddler-proto.refs)$" rimir:dasma:currentField=<<wfStateFieldName>>>
<$transclude tiddler="NONE"/>
</$vars>
</$wikify>
</$wikify>
\end

\define display-info-proto.refs() no
\define infoStateTiddler-proto.refs() $(stateTiddler-proto.refs)$/infoTiddlers/$(targetFieldName-proto.refs)$
\define info-proto.refs()
<$wikify name="wfStateFieldName" text=<<stateFieldName-proto.refs>>>
<$vars rimir:dasma:internalStateTiddler="$(infoStateTiddler-proto.refs)$" rimir:dasma:previousTiddler="$(targetTiddler)$" rimir:dasma:previousField="$(targetFieldName-proto.refs)$" rimir:dasma:currentTiddler="$(stateTiddler-proto.refs)$" rimir:dasma:currentField=<<wfStateFieldName>>>
<$transclude tiddler="TBD"/>
</$vars>
</$wikify>
\end

\define display-previous-proto.refs() yes
\define previous-proto.refs()
<$wikify name="theValue" text="""$(previous-value-proto.refs)$""">
<$vars rimir:dasma:value=<<theValue>>>
<$transclude tiddler="$:/plugins/rimir/dasma/templates/renderers/list-as-ul-name-renderer"/>
</$vars>
</$wikify>
\end

\define display-current-proto.refs() yes
\define current-proto.refs()
<$wikify name="theValue" text="""$(current-value-proto.refs)$""">
<$vars rimir:dasma:value=<<theValue>>>
<$transclude tiddler="$:/plugins/rimir/dasma/templates/renderers/list-as-ul-name-renderer"/>
</$vars>
</$wikify>
\end

\define readonly-proto.refs() no

\define edit-proto.refs()
<$list filter="[<targetTiddler>!is[tiddler]][<readonly-proto.refs>match[no]]+[first[]]">
<$wikify name="wfStateFieldName" text=<<stateFieldName-proto.refs>>>
<$vars rimir:dasma:tiddler="$(stateTiddler-proto.refs)$" rimir:dasma:field=<<wfStateFieldName>> rimir:dasma:filter="[prefix[$:/plugins/rimir/dasma/prototypes]]+[subfilter<narrow-filter-proto.refs>]" rimir:dasma:custom:numOfVisibleElements='3'>
<$set name="referenceField" value="title">
<$transclude tiddler="$:/plugins/rimir/dasma/templates/widgets/multi-selectwidget"/>
</$set>
</$vars>
</$wikify>
</$list>
<$list filter="[<targetTiddler>is[tiddler]]">
<$list filter="[<readonly-proto.refs>match[yes]]">
<$wikify name="theValue" text="""$(previous-value-proto.refs)$""">
<$vars rimir:dasma:value=<<theValue>>>
<$set name="referenceField" value="title">
<$transclude tiddler="$:/plugins/rimir/dasma/templates/renderers/list-as-ul-name-renderer"/>
</$set>
</$vars>
</$wikify>
</$list>
</$list>
\end

\define save-proto.refs()
<$wikify name="currentValue" text=<<current-value-proto.refs>>>
<$list filter="[<currentValue>length[]!match[0]][<transient-proto.refs>!match[yes]]+[count[]match[2]]">
<$wikify name="wfStateFieldName" text=<<stateFieldName-proto.refs>>>
<$vars rimir:dasma:sourceTiddler="$(stateTiddler-proto.refs)$" rimir:dasma:sourceField=<<wfStateFieldName>> rimir:dasma:targetTiddler="$(targetTiddler)$" rimir:dasma:targetField="$(targetFieldName-proto.refs)$" rimir:dasma:custom:numOfVisibleElements='3'>
<$transclude tiddler="$:/plugins/rimir/dasma/templates/actions/copy-field-to-field"/>
</$vars>
</$wikify>
</$list>
<$list filter="[<currentValue>length[]match[0]]">
<$action-deletefield $tiddler=<<targetTiddler>> $field=<<targetFieldName-proto.refs>>/>
</$list>
</$wikify>
\end

\define load-proto.refs()
<$wikify name="wfStateFieldName" text=<<stateFieldName-proto.refs>>>
<$vars rimir:dasma:sourceTiddler="$(targetTiddler)$" rimir:dasma:sourceField="$(targetFieldName-proto.refs)$" rimir:dasma:targetTiddler="$(stateTiddler-proto.refs)$" rimir:dasma:targetField=<<wfStateFieldName>> rimir:dasma:custom:numOfVisibleElements='3'>
<$transclude tiddler="$:/plugins/rimir/dasma/templates/actions/copy-field-to-field"/>
</$vars>
</$wikify>
\end